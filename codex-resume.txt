codex-async-mcp handoff notes (updated September 30, 2025)

Context:
- codex-async-mcp wraps `codex mcp-server` with a detached Codex agent workflow (`job_start`, `job_events`, `job_reply`, `job_notifications`, `job_wait`).
- CodexMCPClient fails pending futures when the subprocess exits and notification backlog is pruned via cursor acknowledgements.
- Job registry and event tooling enforce cursor/limit pagination with default 1,024-character truncation for verbose payloads.
- CLI entry point is `codex-async-mcp`; import path is `codex_async_mcp`.

Open follow-ups:
- Let the event pump exit once a job reaches a terminal status to prevent idle background tasks.
- Cap or summarise per-job event storage so long Codex sessions cannot exhaust memory.
- Revisit CodexMCPClient queue/backpressure strategy for extremely noisy event streams.
- Decide on retention/cleanup policy for completed jobs.

Suggested next steps:
- `pipx install --force .`, launch `codex-async-mcp`, and smoke-test the job_* flow end-to-end (start → wait → notifications → events → reply).
- Confirm notifications arrive promptly with cursor reuse and verify job cancellation/termination behaviour.
- Record new observations or issues here before handing off again.
